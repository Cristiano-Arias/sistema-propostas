rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() { return request.auth != null; }
    function role() { return request.auth.token.role; }
    function isAdmin() { return signedIn() && role() == 'ADMIN'; }
    function isComprador() { return signedIn() && (role() == 'COMPRADOR' || isAdmin()); }
    function isRequisitante() { return signedIn() && (role() == 'REQUISITANTE' || isAdmin()); }
    function isFornecedor() { return signedIn() && (role() == 'FORNECEDOR' || isAdmin()); }

    match /Usuario/{uid} {
      allow read: isAdmin() || (signedIn() && uid == request.auth.uid);
      allow create: isAdmin();
      allow update: isAdmin() || (signedIn() && uid == request.auth.uid && !('perfil' in request.resource.data));
      allow delete: isAdmin();
    }

    match /termos_referencia/{trId} {
      allow create: isRequisitante() && request.resource.data.requisitante_uid == request.auth.uid;
      allow read: signedIn() && (isAdmin() || (isRequisitante() && resource.data.requisitante_uid == request.auth.uid) || isComprador());
      allow update: isRequisitante() && resource.data.requisitante_uid == request.auth.uid && resource.data.status in ['rascunho','revisao'];
      allow delete: isAdmin();
    }

    match /processos/{procId} {
      allow create: isComprador() && request.resource.data.comprador_uid == request.auth.uid;
      allow read: signedIn() && (isAdmin() || (isComprador() && resource.data.comprador_uid == request.auth.uid) || (isRequisitante() && resource.data.requisitante_uid == request.auth.uid));
      allow update: isComprador() && resource.data.comprador_uid == request.auth.uid;
      allow delete: isAdmin();
    }

    match /propostas/{propId} {
      allow create: isFornecedor() && request.resource.data.fornecedor_uid == request.auth.uid;
      allow read: signedIn() && (isAdmin() || (isFornecedor() && resource.data.fornecedor_uid == request.auth.uid) || (isComprador() && exists(/databases/$(database)/documents/processos/$(resource.data.processo_id)) && get(/databases/$(database)/documents/processos/$(resource.data.processo_id)).data.comprador_uid == request.auth.uid));
      allow update: isFornecedor() && resource.data.fornecedor_uid == request.auth.uid && resource.data.status in ['rascunho','enviada'];
      allow delete: isAdmin();
    }

    match /propostas_publicadas/{pubId} {
      allow create, update, delete: isComprador();
      allow read: signedIn() && (isAdmin() || (isRequisitante() && resource.data.requisitante_uid == request.auth.uid) || (isComprador() && resource.data.comprador_uid == request.auth.uid));
    }
  }
}
